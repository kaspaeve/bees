{{!< default}}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tocbot/4.18.2/tocbot.css">
<div class='progress-bar fixed top-0 left-0 hidden z-20'></div>

{{#post }}
<article class="relative kg-width-wide mt-6">



    <div class="relative mt-6 kg-width-full gh-canvas">
        <div class="hidden xl:block w-max z-10 dark:bg-transparent right-auto bg-transparent absolute lg:left-[-12.5rem] xl:left-[-15rem] h-full">
            <div class="sticky top-10 max-w-[170px] bg-white dark:bg-[#151719] pr-3 pb-3" id="original-toc">
                <p class="text-lg flex items-center gap-3">TOC</p>
                <div class="toc-container text-sm relative mt-4"></div>
            </div>
        </div>
        <div class="prose kg-width-full gh-canvas ml-auto max-w-none dark:prose-invert">
            {{content}}
        </div>
        <div class="fixed z-10 bg-white dark:bg-[#151719] lg:dark:bg-transparent w-full left-0 bottom-0 flex justify-center h-max py-3 lg:py-0 lg:left-auto lg:bg-transparent lg:block lg:absolute lg:top-0 lg:right-[-8rem] 2lg:right-[-12rem] 3lg:right-[-14rem] xl:right-[-16rem] lg:w-16 lg:h-full">
            <div class="lg:sticky top-44 right-0 flex lg:flex-col gap-3 sm:gap-5">
                <button onclick="openTOC()" class="xl:hidden hover:text-[var(--color-primary)] text-xs relative bg-white dark:bg-[#151719] h-12 w-12 flex justify-center items-center rounded-full border dark:border-gray-600">
                    TOC
                </button>
                <button onclick="scrollToTop()" class="group relative bg-white dark:bg-[#151719] h-12 w-12 flex justify-center items-center rounded-full border dark:border-gray-600">
                    <svg fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 stroke-gray-500 dark:stroke-gray-500 group-hover:stroke-[var(--color-primary)]">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 19.5v-15m0 0l-6.75 6.75M12 4.5l6.75 6.75" />
                    </svg>
                    <svg class="absolute w-full h-full top-0 left-0" viewBox="2 -2 28 36">
                        <circle class="progress-svg fill-transparent stroke-2" r="16" cx="16" cy="16" style="fill: none; stroke-dashoffset: 100; stroke-linecap: round; stroke: var(--color-primary); stroke-dasharray: 100 100; stroke-linecap: round; stroke-width: 2px;"></circle>
                    </svg>
                </button>
                <a href="https://x.com/intent/tweet?url={{url absolute='true'}}&text={{title}}&hashtags={{@site.title}}" target="_blank" class="group relative bg-white dark:bg-[#151719] h-12 w-12 flex justify-center items-center rounded-full border dark:border-gray-600">
                <svg class="h-4 w-4 group-hover:fill-[var(--color-primary)] fill-gray-500 dark:fill-gray-500" viewBox="0 0 24 24">
                    <path d="M2 2L12 12M12 12L22 22M12 12L22 2M12 12L2 22" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
                 </a>

            <a href="https://www.facebook.com/sharer.php?u={{url absolute="true"}}" target="_blank" class="group relative bg-white dark:bg-[#151719] h-12 w-12 flex justify-center items-center rounded-full border dark:border-gray-600">
              <svg class="w-4 h-4 group-hover:fill-[var(--color-primary)] fill-gray-500 dark:fill-gray-500" shape-rendering="geometricPrecision" text-rendering="geometricPrecision" image-rendering="optimizeQuality" fill-rule="evenodd" clip-rule="evenodd" viewBox="0 0 640 640">
                <path d="M380.001 120.001h99.993V0h-99.993c-77.186 0-139.986 62.8-139.986 139.986v60h-80.009V320h79.985v320h120.013V320h99.994l19.996-120.013h-119.99v-60.001c0-10.843 9.154-19.996 19.996-19.996v.012z"></path>
              </svg>
            </a>
            <button onclick="copyToClipboard()" class="group relative bg-white dark:bg-[#151719] h-12 w-12 flex justify-center items-center rounded-full border dark:border-gray-600">
              <svg class="h-4 w-4 group-hover:fill-[var(--color-primary)] fill-gray-500 dark:fill-gray-500" viewBox="0 0 111.07 122.88" >
                <g>
                  <path class="st0" d="M97.67,20.81L97.67,20.81l0.01,0.02c3.7,0.01,7.04,1.51,9.46,3.93c2.4,2.41,3.9,5.74,3.9,9.42h0.02v0.02v75.28 v0.01h-0.02c-0.01,3.68-1.51,7.03-3.93,9.46c-2.41,2.4-5.74,3.9-9.42,3.9v0.02h-0.02H38.48h-0.01v-0.02 c-3.69-0.01-7.04-1.5-9.46-3.93c-2.4-2.41-3.9-5.74-3.91-9.42H25.1c0-25.96,0-49.34,0-75.3v-0.01h0.02 c0.01-3.69,1.52-7.04,3.94-9.46c2.41-2.4,5.73-3.9,9.42-3.91v-0.02h0.02C58.22,20.81,77.95,20.81,97.67,20.81L97.67,20.81z M0.02,75.38L0,13.39v-0.01h0.02c0.01-3.69,1.52-7.04,3.93-9.46c2.41-2.4,5.74-3.9,9.42-3.91V0h0.02h59.19 c7.69,0,8.9,9.96,0.01,10.16H13.4h-0.02v-0.02c-0.88,0-1.68,0.37-2.27,0.97c-0.59,0.58-0.96,1.4-0.96,2.27h0.02v0.01v3.17 c0,19.61,0,39.21,0,58.81C10.17,83.63,0.02,84.09,0.02,75.38L0.02,75.38z M100.91,109.49V34.2v-0.02h0.02 c0-0.87-0.37-1.68-0.97-2.27c-0.59-0.58-1.4-0.96-2.28-0.96v0.02h-0.01H38.48h-0.02v-0.02c-0.88,0-1.68,0.38-2.27,0.97 c-0.59,0.58-0.96,1.4-0.96,2.27h0.02v0.01v75.28v0.02h-0.02c0,0.88,0.38,1.68,0.97,2.27c0.59,0.59,1.4,0.96,2.27,0.96v-0.02h0.01 h59.19h0.02v0.02c0.87,0,1.68-0.38,2.27-0.97c0.59-0.58,0.96-1.4,0.96-2.27L100.91,109.49L100.91,109.49L100.91,109.49 L100.91,109.49z"></path>
                </g>
              </svg>
            </button>
          </div>
        </div>
    </div>
  </article>

  <div class="flex gap-4 items-center mt-16">
    <div class="border-0 border-b w-full border-b-gray-200 dark:border-b-gray-500"></div>
    <p class="text-gray-500 text-xs uppercase dark:text-gray-400">end</p>
    <div class="border-0 border-b w-full border-b-gray-200 dark:border-b-gray-500"></div>
  </div>
{{/post }}

  {{#post}}
    {{#if comments}}
      <div class="mt-6">
          <div class="comments-loading flex justify-center my-6">
            <svg class="w-6 h-6 animate-spin" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99" />
            </svg>
          </div>
          <div class="comments hidden">
            {{comments mode="light"}}
          </div>
      </div>
    {{/if}}
  {{/post}}

  {{#if @member }}
    <hr class="border-gray-300 dark:border-[#333] mt-8">
  {{/if}}
  <div class="mt-8 pb-24">
    {{> "related-posts" title_classes="mt-8"  }}
  </div>


<div id="mobile-toc-modal-container" class="fixed z-[9999] hidden justify-center items-center w-full bottom-[72px] lg:bottom-auto lg:top-0 lg:h-1/2">
  <div id="mobile-toc-modal" class="bg-white dark:bg-[#151719] border dark:border-gray-600 w-full md:w-[450px] flex flex-col justify-center items-center p-3 pb-6 relative">
    <button onclick="openTOC()" class="absolute top-2 right-2 z-20 flex h-10 w-10 items-center justify-center rounded-md hover:bg-[#E3E8F3] dark:hover:bg-blue-700">
      <svg fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
    <p class="font-bold">TOC</p>
  </di>
</div>

{{#contentFor "scripts"}}{{/contentFor}}

<script>

  function openTOC(e){
    let mobileTocModal = document.querySelector('#mobile-toc-modal')
    let mobileTocModalContainer = document.querySelector('#mobile-toc-modal-container')
    let originalToc = document.querySelector('#original-toc')

    mobileTocModalContainer.classList.toggle('hidden')
    mobileTocModalContainer.classList.toggle('flex')
 
    mobileTocModal.appendChild(originalToc.querySelector('.toc-container'))
  }

  function scrollToTop(e){
    window.scrollTo({top: 0, behavior: 'smooth'})
  }

  function copyToClipboard(){
    try{
      navigator.clipboard.writeText(window.location.href)
      showSuccessToast("Link copied to clipboard")
    }catch(e){
      showErrorToast("something went wrong")
      console.log(e)
    }
  }
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/tocbot/4.18.2/tocbot.min.js"></script>
<script>
  tocbot.init({
    // Where to render the table of contents.
    tocSelector: '.toc-container',
    // Where to grab the headings to build the table of contents.
    contentSelector: '.prose',
    // Which headings to grab inside of the contentSelector element.
    headingSelector: 'h1, h2, h3, h4, h5, h6',
    // For headings inside relative or absolute positioned containers within content.
    hasInnerContainers: true,
    headingsOffset: 100,
    scrollSmoothOffset: -100
  });

  // Check after initialization to hide the TOC if empty
  document.addEventListener('DOMContentLoaded', () => {
    const tocContainer = document.querySelector('.toc-container');
    // Check if there are any items in the TOC container
    if (!tocContainer.innerHTML.trim()) {
      const tocSection = document.querySelector('#original-toc'); // Modify selector if needed
      if (tocSection) {
        tocSection.style.display = 'none';
      }
    }
  });
</script>


<script src="{{ asset "js/prism.js" }}"></script>
<link rel="stylesheet" href="{{ asset "css/prism.css" }}">

<script>
  function initCodeCopy() {
    const codeBlocks = document.querySelectorAll('code[class*="language-"]');

    codeBlocks.forEach((block) => {
        const lang = parseLanguage(block);
        const referenceEl = block.parentElement;
        const parent = block.parentElement.parentElement;
        
        const wrapper = document.createElement('div');
        wrapper.className = 'code-wrapper';
        parent.insertBefore(wrapper, referenceEl);
        wrapper.append(block.parentElement);

        const copyBtn = document.createElement('button');
        copyBtn.setAttribute('class', 'copy-button');
        copyBtn.setAttribute('data-lang', lang);
        copyBtn.innerHTML = `${lang} <svg viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"/><path d="M7 6V3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-3v3c0 .552-.45 1-1.007 1H4.007A1.001 1.001 0 0 1 3 21l.003-14c0-.552.45-1 1.007-1H7zM5.003 8L5 20h10V8H5.003zM9 6h8v10h2V4H9v2z" fill="currentColor"/></svg>`;

        wrapper.insertAdjacentElement('beforeend', copyBtn);
    });

    function parseLanguage(block) {
        const className = block.className;
        if (className.startsWith('language')) {
            const [prefix, lang] = className.split('-');
            return lang;
        }
    }

    function copy(e) {
        const btn = e.currentTarget;
        const lang = btn.dataset.lang;

        const text = e.currentTarget.previousSibling.children[0].textContent;

        navigator.clipboard.writeText(text).then(
            () => {
                btn.innerHTML = `copied! <svg viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"/><path d="M7 6V3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-3v3c0 .552-.45 1-1.007 1H4.007A1.001 1.001 0 0 1 3 21l.003-14c0-.552.45-1 1.007-1H7zm2 0h8v10h2V4H9v2z" fill="currentColor"/></svg>`;
                btn.setAttribute('style', 'opacity: 1');
                
            },
            () => alert('failed to copy'),
        );

        setTimeout(() => {
            btn.removeAttribute('style');
            btn.innerHTML = `${lang} <svg viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"/><path d="M7 6V3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-3v3c0 .552-.45 1-1.007 1H4.007A1.001 1.001 0 0 1 3 21l.003-14c0-.552.45-1 1.007-1H7zM5.003 8L5 20h10V8H5.003zM9 6h8v10h2V4H9v2z" fill="currentColor"/></svg>`;
        }, 3000);
    }

    const copyButtons = document.querySelectorAll('.copy-button');

    copyButtons.forEach((btn) => {
        btn.addEventListener('click', copy);
    });
}

initCodeCopy()
</script>

<style>
  .code-wrapper {
    position: relative;
    overflow: hidden;
    border-radius: 8px;
  }

  .code-wrapper > pre[class*="language-"] {
    margin-top: 0;
  }

  .copy-button {
    position: absolute;
    top: 5px;
    right: 5px;
    display: flex;
    align-items: center;
    color: rgb(230 202 168);
    cursor: pointer;
    background: transparent;
    border: none;
    font-size: 0.8rem;
  }

  .copy-button svg {
    width: 1em;
    margin-left: 0.25em;
    opacity: 0.5;
    transition: opacity 0.3s;
  }

  .copy-button:hover svg {
    opacity: 1;
  }
</style>